name: Auto Sync Fork with Upstream

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add upstream remote and fetch
      run: |
        git remote add upstream https://github.com/timdegroot1996/robotframework-dashboard.git || true
        git fetch upstream main

    - name: Check and sync with upstream
      run: |
        UPSTREAM_HASH=$(git rev-parse upstream/main)
        CURRENT_HASH=$(git rev-parse HEAD)
        
        echo "Current HEAD: $CURRENT_HASH"
        echo "Upstream HEAD: $UPSTREAM_HASH"
        
        if [ "$UPSTREAM_HASH" = "$CURRENT_HASH" ]; then
          echo "‚úÖ Fork is already up to date with upstream"
          exit 0
        fi
        
        COMMITS_BEHIND=$(git rev-list --count HEAD..upstream/main)
        COMMITS_AHEAD=$(git rev-list --count upstream/main..HEAD)
        
        echo "ÔøΩ Status: $COMMITS_BEHIND commits behind, $COMMITS_AHEAD commits ahead"
        
        if [ "$COMMITS_BEHIND" -eq 0 ]; then
          echo "‚úÖ Fork is up to date or ahead of upstream - no sync needed"
          exit 0
        fi
        
        # Get list of new commits for logging
        echo "New commits from upstream:"
        git log --oneline HEAD..upstream/main
        
        # Try to merge upstream changes
        echo "üîÑ Attempting to merge upstream changes..."
        if git merge upstream/main --no-edit; then
          echo "‚úÖ Successfully merged upstream changes"
          
          # Push the changes
          git push origin main
          
          echo "üéâ Successfully synced $COMMITS_BEHIND commits from upstream!"
          echo "Updated commits:"
          git log --oneline $CURRENT_HASH..HEAD
        else
          echo "‚ùå Merge failed - conflicts exist"
          echo "Manual intervention required for merge conflicts"
          git merge --abort
          exit 1
        fi
