name: Sync Fork with Upstream

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global pull.rebase false

    - name: Setup upstream remote
      run: |
        if git remote get-url upstream 2>/dev/null; then
          echo "Upstream remote already exists"
          git remote set-url upstream https://github.com/timdegroot1996/robotframework-dashboard.git
        else
          echo "Adding upstream remote"
          git remote add upstream https://github.com/timdegroot1996/robotframework-dashboard.git
        fi

    - name: Fetch upstream changes
      run: |
        echo "Fetching upstream changes..."
        git fetch upstream main --no-tags
        git fetch origin main

    - name: Check for changes
      id: check-changes
      run: |
        # Get the latest commit hashes
        UPSTREAM_HASH=$(git rev-parse upstream/main)
        CURRENT_HASH=$(git rev-parse HEAD)
        
        echo "Current HEAD: $CURRENT_HASH"
        echo "Upstream HEAD: $UPSTREAM_HASH"
        
        if [ "$UPSTREAM_HASH" = "$CURRENT_HASH" ]; then
          echo "✅ Fork is already up to date with upstream"
          echo "has_changes=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Count commits behind
        COMMITS_BEHIND=$(git rev-list --count HEAD..upstream/main)
        echo "Commits behind upstream: $COMMITS_BEHIND"
        
        # Check if we can fast-forward merge
        MERGE_BASE=$(git merge-base HEAD upstream/main)
        
        if [ "$MERGE_BASE" = "$CURRENT_HASH" ]; then
          echo "🚀 Fast-forward merge possible"
          MERGE_TYPE="fast-forward"
        else
          echo "⚠️ Non-fast-forward merge required"
          MERGE_TYPE="merge-commit"
        fi
        
        # Save outputs for PR creation
        echo "has_changes=true" >> $GITHUB_OUTPUT
        echo "commits_behind=$COMMITS_BEHIND" >> $GITHUB_OUTPUT
        echo "merge_type=$MERGE_TYPE" >> $GITHUB_OUTPUT
        echo "upstream_hash=$UPSTREAM_HASH" >> $GITHUB_OUTPUT

    - name: Merge upstream changes
      id: merge
      if: steps.check-changes.outputs.has_changes == 'true'
      run: |
        echo "🔄 Starting merge of upstream changes..."
        
        # Try to merge upstream changes
        if git merge upstream/main --no-edit; then
          echo "✅ Merge completed successfully"
          echo "conflicts=false" >> $GITHUB_OUTPUT
        else
          echo "⚠️ Merge conflicts detected, will create PR for manual resolution"
          git merge --abort
          # Create a branch and perform the merge with conflict markers
          git checkout -b sync-upstream-conflicts
          git merge upstream/main --no-edit || true
          echo "conflicts=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.check-changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Sync with upstream changes (${{ steps.check-changes.outputs.commits_behind }} commits)"
        committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
        author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
        title: "🔄 Sync with upstream (${{ steps.check-changes.outputs.commits_behind }} commits behind)"
        body: |
          ## 🔄 Upstream Sync
          
          This PR syncs the fork with the latest changes from upstream.
          
          **📊 Summary:**
          - **Commits behind:** ${{ steps.check-changes.outputs.commits_behind }}
          - **Merge type:** ${{ steps.check-changes.outputs.merge_type }}
          - **Upstream commit:** `${{ steps.check-changes.outputs.upstream_hash }}`
          - **Conflicts detected:** ${{ steps.merge.outputs.conflicts == 'true' && '⚠️ Yes' || '✅ No' }}
          
          **🔗 Links:**
          - [Upstream Repository](https://github.com/timdegroot1996/robotframework-dashboard)
          - [Compare Changes](https://github.com/timdegroot1996/robotframework-dashboard/compare/${{ github.sha }}..${{ steps.check-changes.outputs.upstream_hash }})
          
          **✅ Next Steps:**
          ${{ steps.merge.outputs.conflicts == 'true' && '1. ⚠️ Resolve merge conflicts manually
          2. Test the changes
          3. Merge when conflicts are resolved' || '1. Review the changes in this PR
          2. Test if needed  
          3. Merge when ready' }}
          
          ---
          🤖 *Auto-generated by sync workflow*
        branch: sync-upstream
        delete-branch: true
        base: main
