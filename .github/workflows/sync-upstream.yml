name: Sync Fork with Upstream

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add upstream remote
      run: |
        git remote add upstream https://github.com/timdegroot1996/robotframework-dashboard.git || true
        git fetch upstream main

    - name: Check for changes
      id: check
      run: |
        UPSTREAM_HASH=$(git rev-parse upstream/main)
        CURRENT_HASH=$(git rev-parse HEAD)
        
        echo "Current HEAD: $CURRENT_HASH"
        echo "Upstream HEAD: $UPSTREAM_HASH"
        
        if [ "$UPSTREAM_HASH" = "$CURRENT_HASH" ]; then
          echo "âœ… Fork is up to date with upstream"
          echo "needs_sync=false" >> $GITHUB_OUTPUT
        else
          COMMITS_BEHIND=$(git rev-list --count HEAD..upstream/main)
          echo "ðŸ”„ Fork is $COMMITS_BEHIND commits behind upstream"
          echo "needs_sync=true" >> $GITHUB_OUTPUT
          echo "commits_behind=$COMMITS_BEHIND" >> $GITHUB_OUTPUT
          echo "upstream_hash=$UPSTREAM_HASH" >> $GITHUB_OUTPUT
        fi

    - name: Create Issue for Manual Sync
      if: steps.check.outputs.needs_sync == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const issueBody = `## ðŸ”„ Fork Sync Required
          
          Your fork is **${{ steps.check.outputs.commits_behind }}** commits behind upstream.
          
          **ðŸ“Š Details:**
          - **Commits behind:** ${{ steps.check.outputs.commits_behind }}
          - **Upstream commit:** \`${{ steps.check.outputs.upstream_hash }}\`
          
          **ðŸ”— Links:**
          - [Upstream Repository](https://github.com/timdegroot1996/robotframework-dashboard)
          - [Compare Changes](https://github.com/timdegroot1996/robotframework-dashboard/compare/${{ github.sha }}...${{ steps.check.outputs.upstream_hash }})
          
          **ðŸš€ Sync Commands:**
          \`\`\`bash
          # Method 1: Using GitHub CLI (recommended)
          gh repo sync ${{ github.repository }} --source timdegroot1996/robotframework-dashboard
          
          # Method 2: Using git commands
          git remote add upstream https://github.com/timdegroot1996/robotframework-dashboard.git
          git fetch upstream main
          git checkout main
          git merge upstream/main
          git push origin main
          \`\`\`
          
          **âœ… After syncing:** Close this issue.
          
          ---
          ðŸ¤– *Auto-generated sync notification*`;
          
          // Check if there's already an open sync issue
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'sync',
            state: 'open'
          });
          
          if (existingIssues.data.length > 0) {
            console.log('Sync issue already exists, updating it...');
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: existingIssues.data[0].number,
              title: `ðŸ”„ Fork Sync Required (${{ steps.check.outputs.commits_behind }} commits behind)`,
              body: issueBody
            });
          } else {
            console.log('Creating new sync issue...');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”„ Fork Sync Required (${{ steps.check.outputs.commits_behind }} commits behind)`,
              body: issueBody,
              labels: ['sync', 'automation']
            });
          }
